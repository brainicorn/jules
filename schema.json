{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "array",
  "definitions": {
    "github_com-brainicorn-jules-Composite": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "CompositeOrCondition is the base interface for a set of conditions.",
            "anyOf": [
              {
                "$ref": "#"
              },
              {
                "$ref": "#/definitions/github_com-brainicorn-jules-Condition"
              }
            ]
          },
          "minItems": 1
        },
        "match": {
          "type": "string",
          "pattern": "^all$|^any$|^none$"
        }
      },
      "required": [
        "match",
        "conditions"
      ]
    },
    "github_com-brainicorn-jules-Condition": {
      "type": "object",
      "properties": {
        "op": {
          "type": "string",
          "pattern": "^eq$|^neq$|^gt$|^lt$|^gte$|^lte$|^exists$|^notexists$"
        },
        "path": {
          "type": "string"
        },
        "value": {}
      },
      "required": [
        "path",
        "op"
      ]
    },
    "github_com-brainicorn-jules-FromToAction": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "op": {
          "type": "string",
          "pattern": "^move$|^copy$"
        },
        "to": {
          "type": "string"
        }
      },
      "required": [
        "op",
        "from",
        "to"
      ]
    },
    "github_com-brainicorn-jules-Jule": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Action is the base interface for an action.",
            "anyOf": [
              {
                "$ref": "#/definitions/github_com-brainicorn-jules-ValueAction"
              },
              {
                "$ref": "#/definitions/github_com-brainicorn-jules-PathAction"
              },
              {
                "$ref": "#/definitions/github_com-brainicorn-jules-FromToAction"
              }
            ]
          }
        },
        "condition": {
          "type": "object",
          "title": "CompositeOrCondition is the base interface for a set of conditions.",
          "anyOf": [
            {
              "$ref": "#/definitions/github_com-brainicorn-jules-Composite"
            },
            {
              "$ref": "#/definitions/github_com-brainicorn-jules-Condition"
            }
          ]
        }
      }
    },
    "github_com-brainicorn-jules-PathAction": {
      "type": "object",
      "properties": {
        "op": {
          "type": "string",
          "pattern": "^remove$"
        },
        "path": {
          "type": "string"
        }
      },
      "required": [
        "op",
        "path"
      ]
    },
    "github_com-brainicorn-jules-ValueAction": {
      "type": "object",
      "properties": {
        "op": {
          "type": "string",
          "pattern": "^add$|^replace$"
        },
        "path": {
          "type": "string"
        },
        "value": {}
      },
      "required": [
        "op",
        "path",
        "value"
      ]
    }
  },
  "items": {
    "$ref": "#/definitions/github_com-brainicorn-jules-Jule"
  }
}